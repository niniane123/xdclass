异常的学习
了解异常
    当检测到一个错误的时候，解释器就无法继续执行了，反而出现了一些错误的提示，这就是所谓的异常
    异常语句可以用于执行可能发生错误的代码，如果发生异常就会执行其他程序语句；程序可以继续执行下去
捕获异常
    try:
        可能发生错误的代码
    except 异常类型:
        如果捕获到该异常要执行的代码
    注意：
        如果尝试执行得代码的异常类型和要捕获的异常类型不一致，则无法捕获异常
        一般try下面只放一行尝试执行的代码

捕获多个指定异常：
    当捕获多个异常的时候，可以吧要捕获的异常的名字放到except之后，并且使用元组的方式去书写

捕获异常描述信息
    try:
        print(num)
    except (NameError,ZeroDivisionError) as result：
        print(result)
捕获所有异常：
    mException是所有程序异常类的父类所以我们只要捕获到Exception即可
    try:
        print(num)
    except Exception as result：
        print(result)
异常的else
    else表示的是如果没有异常要执行的代码
    try:
        print(1)
    except Exception as result:
        print(f"发生错误{result}")
    else:
        print("我是else，是没有异常的时候执行的代码")

异常finally
    finally表示的是无论是否异常都要执行的代码，例如关闭文件
异常的传递

自定义异常
class 异常类类名(Exception)
    代码

    # 设置异常的抛出信息
     def  __str__(self):
        return ....
 抛出异常
    raise 异常类名()

 捕获异常
    except Exception
